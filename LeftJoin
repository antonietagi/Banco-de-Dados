DROP TABLE IF EXISTS customers;
DROP TABLE IF EXISTS locations;
CREATE TABLE customers (
    id numeric PRIMARY KEY,
    name varchar(255),
    street varchar(255),
    city varchar(255)
);

CREATE TABLE locations (
    id numeric PRIMARY KEY,
    locations_date date,
    id_customers numeric,
    FOREIGN KEY (id_customers) REFERENCES customers(id)
);

INSERT INTO customers (id, name, street, city)
VALUES
(1, 'Giovanna G. Oliveira', 'Rua Mato Grosso', 'Canoas'),
(2, 'Kauã Azevedo Ribeiro', 'Travessa Ibiá', 'Uberlândia'),
(3, 'Rebeca Barbosa Santos', 'Rua Observatório Meteorológico', 'Salvador'),
(4, 'Sarah Carvalho Correia', 'Rua Antônio Carlos da Silva', 'Apucarana'),
(5, 'João Almeida Lima', 'Rua Rio Taiuva', 'Ponta Grossa'),
(6, 'Diogo Melo Dias', 'Rua Duzentos e Cinqüenta', 'Várzea Grande');

-- Corrigindo a inserção de datas para o formato correto (aspas simples em torno da data)
INSERT INTO rentals (id, locations_date, id_customers)
VALUES
(1, '2016-10-09', 3),
(2, '2016-09-02', 1),
(3, '2016-08-02', 4),
(4, '2016-09-02', 2),
(5, '2016-03-02', 6),
(6, '2016-04-04', 4);
-- Seu trabalho é nos entregar o ID e o nome dos clientes que não realizaram
-- nenhuma locação. Ordene a saída por ID.

SELECT customers.id, customers.name
FROM customers
LEFT JOIN locations ON locations.id_customers = customers.id -- confere registros da tabela
WHERE locations.id_customers IS NULL -- apenas os clientes que não tenham locações sejam retornados. 
ORDER BY customers.id;
